@model IEnumerable<NotesMarketPlace.Models.AdminPublishedNoteViewModel>
@{
    ViewBag.Title = "PublishedNote";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}

@{
    Html.RenderPartial("_Admin_Navbar");
}

<!-- published notes -->
<section id="published-note">
    <div class="content-box">
        <div class="container">

            <!-- heading -->
            <div class="row">
                <div class="col-xl-12">
                    <h4>Published Notes</h4>
                </div>
            </div>

            <!-- inprogress note heading -->
            @using (Html.BeginForm("PublishedNote", "AdminPublishedNote", FormMethod.Get, new { memberId = ViewBag.MemberID }))
            {
                <div class="row">

                    <!-- seller filter-->
                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
                        <label>Seller</label>
                        <div class="form-group filter-seller">
                            @Html.DropDownList("sellerName", new SelectList(@ViewBag.sellerNameList, "Name"), "Select Name", new { @class = "form-control", id = "inputState", name = "sellerName" })
                        </div>
                    </div>

                    <!-- search -->
                    <div class="col-xl-9 col-lg-9 col-md-9 col-sm-9 col-12 search-bar-btn">
                        <div class="search-btn">
                            <button type="submit" id="search-btn" class="btn btn-primary btn-lg">SEARCH</button>
                        </div>
                        <div>
                            <input type="text" id="myInput" name="PubNote_search" placeholder="Search..." title="Type in a name">
                        </div>
                    </div>

                </div>
            }

            <!-- inprogress note table -->
            <div class="row">
                <div class="table-responsive">
                    <table class="table published-note-tbl">
                        <thead>
                            <tr>
                                <th scope="col">SR.NO</th>
                                <th scope="col">@Html.ActionLink("NOTE TITLE", "PublishedNote", new { SortOrder = ViewBag.TitleSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("CATEGORY", "PublishedNote", new { SortOrder = ViewBag.CategorySortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("SELL TYPE", "PublishedNote", new { SortOrder = ViewBag.SellTypeSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("PRICE", "PublishedNote", new { SortOrder = ViewBag.PriceSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("SELLER", "PublishedNote", new { SortOrder = ViewBag.NameSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col"></th>
                                <th scope="col">@Html.ActionLink("PUBLISHED DATE", "PublishedNote", new { SortOrder = ViewBag.DateSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("APPROVED BY", "PublishedNote", new { SortOrder = ViewBag.ApprovedSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col">@Html.ActionLink("NUMBER OF DOWNLOADS", "PublishedNote", new { SortOrder = ViewBag.TotalDownloadSortParm, PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID, PubNote_page = ViewBag.currentPage })</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>

                            @if (ViewBag.totalPage == 0)
                            {
                                <tr>
                                    <td colspan="11" class="text-center">No Record Found</td>
                                </tr>
                            }
                            @{
                                int no = (ViewBag.currentPage - 1) * 10 + 1;
                            }
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@no</td>
                                    <td class="link-change-color"><a href="@Url.Action("NoteDetails", "SearchNote", new { id = item.pNote.psnotes.ID})">@item.pNote.psnotes.Title</a></td>
                                    <td>@item.pNote.psnotes.NoteCategories.Name</td>
                                    @if (item.pNote.psnotes.IsPaid == true)
                                    {
                                        <td>Paid</td>
                                        <td>$@item.pNote.psnotes.SellingPrice</td>
                                    }
                                    else
                                    {
                                        <td>Free</td>
                                        <td>$0</td>
                                    }                            
                                    <td>@item.pNote.user.FirstName @item.pNote.user.LastName</td>
                                    <td><a href="@Url.Action("MemberDetail","MemberDetail", new { memberId = item.pNote.user.ID})"><img src="~/Content/image/comman-images/eye.png"></a></td>
                                    <td>@item.pNote.psnotes.PublishedDate</td>
                                    <td>@item.pNote.auser.FirstName @item.pNote.auser.LastName</td>
                                    <td class="link-change-color"><a href="@Url.Action("AllDownloadedNote","AdminAllDownloadedNote", new { noteid = item.pNote.psnotes.ID})">@item.TotalDownload</a></td>
                                    <td>
                                        <div class="table-last-img">

                                            <!-- drop down menu -->
                                            <button type="button" id="dropdownMenu2" class="btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <img src="~/Content/image/comman-images/dots.png" alt="menu" class="dropdown">
                                            </button>

                                            <!-- dropdown item -->
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                                                @Html.ActionLink("View More Details", "NoteDetails", "SearchNote", new { id = item.pNote.psnotes.ID }, new { @class = "dropdown-item" })
                                                @Html.ActionLink("Download Note", "AdminDownload", "AdminDownloadNote", new { noteId = item.pNote.psnotes.ID, userId = item.pNote.user.ID }, new { @class = "dropdown-item" })
                                                <button type="button" class="btn btn-secondary dropdown-item" data-target="#unPublishedModal-@item.pNote.psnotes.ID" data-toggle="modal">Unpublished</button>
                                            </div>

                                            <!--pop up box for unpublished note -->
                                            <div class="modal fade" id="unPublishedModal-@item.pNote.psnotes.ID" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-scrollable" role="document">
                                                    <div class="modal-content">

                                                        <div class="modal-body">
                                                            @using (Html.BeginForm("UnpublishedNote", "AdminDashboard", FormMethod.Post))
                                                            {
                                                                @Html.AntiForgeryToken()

                                                                <input name="noteid" value="@item.pNote.psnotes.ID" hidden>

                                                                <h2 class="text-left">@item.pNote.psnotes.Title</h2>

                                                                <div class="form-group">
                                                                    <label class="pull-left">Remarks*</label>
                                                                    <textarea class="form-control" name="remarkUnPublished" id="remarkUnPublished-@item.pNote.psnotes.ID" rows="4" placeholder="Comments..." required="required"></textarea>
                                                                </div>

                                                                <div>
                                                                    <button type="button" class="btn btn-secondary unpublishedBox" data-dismiss="modal">Cancle</button>
                                                                    <button type="submit" class="btn btn-primary unpublishedBoxYes" onclick="return confirm('Are you sure you want to unpublished this note ?')" data-target="#rejectConfirmModal-@item.pNote.psnotes.ID" data-toggle="modal">Unpublish</button>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- popup box end -->

                                        </div>
                                    </td>
                                </tr>
                                no++;
                            }

                        </tbody>
                    </table>
                </div>
            </div>

            <!-- pagination of progress notes -->
            @if (ViewBag.totalPage != 0)
            {
                <div class="row">
                    <div class="col-xl-12 col-lg-12 text-center">
                        <div class="pagination">

                            @if (ViewBag.currentPage == 1)
                            {
                                <a href="@Url.Action("PublishedNote", new { PubNote_page = @ViewBag.currentPage, SortOrder = Request.QueryString["SortOrder"], PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID })"><i class="fa fa-angle-left"></i></a>
                            }
                            else
                            {
                                <a href="@Url.Action("PublishedNote", new { PubNote_page = @ViewBag.currentPage - 1, SortOrder = Request.QueryString["SortOrder"], PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID })"><i class="fa fa-angle-left"></i></a>
                            }

                            @{
                                for (int i = ViewBag.startPage; i <= ViewBag.endPage; i++)
                                {
                                    if (i == ViewBag.currentPage)
                                    {
                                        <a class="active">@i<span class="sr-only">(current)</span></a>
                                    }
                                    else
                                    {
                                        @Html.ActionLink(i.ToString(), "PublishedNote", new { PubNote_page = i, SortOrder = Request.QueryString["SortOrder"], PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID }, new { @class = "page-link" })
                                    }
                                }
                            }

                            @if (ViewBag.currentPage == ViewBag.endPage)
                            {
                                <a href="@Url.Action("PublishedNote", new { PubNote_page = @ViewBag.currentPage, SortOrder = Request.QueryString["SortOrder"], PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID })"><i class="fa fa-angle-right"></i></a>
                            }
                            else
                            {
                                <a href="@Url.Action("PublishedNote", new { PubNote_page = @ViewBag.currentPage + 1, SortOrder = Request.QueryString["SortOrder"], PubNote_search = Request.QueryString["PubNote_search"], sellerName = Request.QueryString["sellerName"], memberId = ViewBag.MemberID })"><i class="fa fa-angle-right"></i></a>
                            }

                        </div>
                    </div>
                </div>
            }
            <!-- end of pagination -->

        </div>
    </div>
</section>

@{
    Html.RenderPartial("_Admin_Footer");
}

